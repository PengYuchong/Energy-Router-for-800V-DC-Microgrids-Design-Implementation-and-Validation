function [Irms,P] = RMScurrent_Power_Forward(M,d,phi)
%RMSCURRENT_FORWARD 此处显示有关此函数的摘要
%   此处显示详细说明
    I_point=[];
    t=[];
    P=0;
    D=1-M;
    varphi=phi;
    if varphi>=0 && varphi<d
        I_point=[D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 2*d + 4*D*d - 4*D*varphi - 2*D^2,...
            D + 2*d - 4*varphi - 4*D*d + 4*D*varphi - 2*D^2,...
            2*d - 3*D - 4*varphi - 4*D*d + 4*D*varphi + 6*D^2,...
            D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2]./(1-D);
        t=[0,varphi,     0.5,        0.5+varphi,     0.5+d,      1-D+d, 1];
        P=(2*d - D - 4*varphi - 4*D*d + 4*D*varphi + 2*D^2 + 4*varphi^2)/(D - 1);
    elseif varphi >=d && varphi<0.5-D+d
        I_point=[D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 6*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D + 2*d - 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            2*d - 3*D - 4*varphi - 4*D*d + 4*D*varphi + 6*D^2,...
            D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2]./(1-D);
        t=[0,         varphi,     0.5,        0.5+d,          0.5+varphi,      1-D+d, 1];
        P=(2*D^2 - 4*D*d + 4*D*varphi - D + 4*d^2 - 8*d*varphi + 2*d + 8*varphi^2 - 4*varphi)/(D - 1);
    elseif varphi>=0.5-D+d && varphi<0.5
        I_point=[D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 2*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            D - 6*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2,...
            9*D - 6*d + 4*varphi + 4*D*d - 4*D*varphi - 2*D^2 - 4,...
            5*D - 2*d + 4*D*d - 4*D*varphi - 2*D^2 - 2,...
            D - 2*d - 4*varphi + 4*D*d + 4*D*varphi - 2*D^2]./(1-D);
        t=[0,         varphi,     0.5,        0.5+d,         1-D+d,          0.5+varphi, 1];
        P=-(2*d - 3*D - 4*D*d + 4*D*varphi + 2*D^2 - 4*varphi^2 + 1)/(D - 1);
    end

    [t_uni,index1,index2]=unique(t,'stable');

    fitModel = fit(t_uni', transpose(I_point(index1)), 'linearinterp');
    t_fit = linspace(min(t), max(t), 200);
    I_fit = feval(fitModel, t_fit);
    plot(t_fit,I_fit)
    Irms=rms(I_fit(2:end));
end

